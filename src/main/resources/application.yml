spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://119.29.64.81:3306/xy?useUnicode=true&characterEncoding=utf8
    driver-class-name: com.mysql.jdbc.Driver
    username: xy
    password: xy
    #Druid增加配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: 
      druid.stat.mergeSql:true
      druid.stat.slowSqlMillis:5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true


      
    
  jpa:
    #database: mysql
    properties:
      hibernate:
        show_sql: true
        #format_sql:true
  #配置Redis数据库
  redis:
    host: 127.0.0.1
    port: 6379   #默认端口
    pool:
      max-active: 20
      min-idle: 1
      max-idle: 20
      max-wait: 60000
    database: 0 #默认是索引为0的数据库

    

logging:
  file: logs/test_hello.log
server:
  port: 8012
  tomcat:
    uri-encoding: utf-8
    

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.example.demo.model

#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql


